package lib.editor.ui;

import com.badlogic.gdx.Gdx;
import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Arrays;
import java.util.List;
import java.util.Properties;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JPopupMenu;
import javax.swing.JToolBar;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.filechooser.FileNameExtensionFilter;
import lib.editor.mgr.AppMgr;
import lib.editor.mgr.Mgr;
import lib.editor.mgr.ProjectMgr;
import lib.editor.mgr.WidgetMgr;
import lib.editor.mgr.WindowMgr;
import lib.editor.util.SwingUtil;
import lib.editor.widget.mainwindow.action.CopyAction;
import lib.editor.widget.mapeditor.MapEditorGraphicsView;
import org.jdesktop.swingx.MultiSplitLayout.Divider;
import org.jdesktop.swingx.MultiSplitLayout.Leaf;
import org.jdesktop.swingx.MultiSplitLayout.Split;
import org.jdesktop.swingx.multisplitpane.DefaultSplitPaneModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gaetan
 */
public class MainWindow extends javax.swing.JFrame {
    
    MapEditorGraphicsView mapEditor;
    
    public CopyAction copyAction;
    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {
        copyAction = new CopyAction();
        
        
        setLocationRelativeTo( null );
        /*
 List children = 
Arrays.asList(new Leaf("left"),
        new Divider(), 
new Leaf("center"),
new Divider(), 
new Leaf("right"));
Split modelRoot = new Split();
modelRoot.setChildren(children);

jXMultiSplitPane1.getMultiSplitLayout().setModel(modelRoot);
jXMultiSplitPane1.add(jButton1, "left");
jXMultiSplitPane1.add(jButton2, "right");
jXMultiSplitPane1.add(jPanel3, "center");

*/

        
        
        
    }
    
    public void init(){
        initComponents();
        
                mapEditor = new MapEditorGraphicsView();
        jPanel3.add(mapEditor.getCanvas());
        



        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        
        setTitle(AppMgr.getNameVersion());
        //WidgetMgr.MAIN_WINDOW = this;
        
        setProjectStateEnabled(false);
        AppMgr.init();
        
        WidgetMgr.MAP_TREE = mapTree;
        WidgetMgr.MAP_TREE.setup();
    }
    
    public void saveSettings(Properties prop){
        String prefix = "MainWindow_";
        prop.put(prefix + "x", String.valueOf(this.getX()));
        prop.put(prefix + "y", String.valueOf(this.getY()));
        prop.put(prefix + "width", String.valueOf(this.getWidth()));
        prop.put(prefix + "height", String.valueOf(this.getHeight()));
        prop.put(prefix + "maximized", String.valueOf(this.getExtendedState() & JFrame.MAXIMIZED_BOTH));
    }
    
    public void loadSettings(Properties prop){
        String prefix = "MainWindow_";
        setBounds(
                Integer.parseInt(prop.getProperty(prefix + "x")), 
                Integer.parseInt(prop.getProperty(prefix + "y")),
                Integer.parseInt(prop.getProperty(prefix + "width")),
                Integer.parseInt(prop.getProperty(prefix + "height")));
        SwingUtil.adjustComponentBounds(this, null);
        if(Integer.parseInt(prop.getProperty(prefix + "maximized")) != 0){
            setExtendedState(getExtendedState() | JFrame.MAXIMIZED_BOTH);
        }
        
    }
    
    public void setProjectStateEnabled(boolean enabled){
        //Enabled tool bar, except new and open project
        for(int i=2; i<mainToolBar.getComponentCount(); i++){
            if(!(mainToolBar.getComponent(i) instanceof JToolBar.Separator)){
                mainToolBar.getComponent(i).setEnabled(enabled);
            }
        }
        
        //Enabled file menu, except new, open project and exit
        for(int i=2; i<fileMenu.getMenuComponentCount()-1; i++){
            if(!(fileMenu.getMenuComponent(i) instanceof JPopupMenu.Separator)){
                fileMenu.getMenuComponent(i).setEnabled(enabled);
            }
        }
        
        //Enabled all the other menu in the mainMenuBar
        for(int i=1; i<mainMenuBar.getComponentCount(); i++){
            JMenu menu = (JMenu) mainMenuBar.getComponent(i);
            for(Component comp : menu.getMenuComponents()){
                if(!(comp instanceof JPopupMenu.Separator)){
                    comp.setEnabled(enabled);
                }
            }
        }
        
        //Show or not the middle panel (map editor, map tree, etc...)
        middlePanel.setVisible(enabled);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainToolBar = new javax.swing.JToolBar();
        toolBarNewProject = new javax.swing.JButton();
        toolBarOpenProject = new javax.swing.JButton();
        toolBarSaveProject = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        toolBarCut = new javax.swing.JButton();
        toolBarCopy = new javax.swing.JButton();
        toolBarPaste = new javax.swing.JButton();
        toolBarDelete = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        toolBarUndo = new javax.swing.JButton();
        toolBarRedo = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jPanel1 = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();
        middlePanel = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mapTree = new lib.editor.widget.tree.tree.MapTree();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileMenuNewProject = new javax.swing.JMenuItem();
        fileMenuOpenProject = new javax.swing.JMenuItem();
        fileMenuCloseProject = new javax.swing.JMenuItem();
        fileMenuSaveProject = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        fileMenuExit = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        menuEditUndo = new javax.swing.JMenuItem();
        menuEditRedo = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        menuEditCut = new javax.swing.JMenuItem();
        menuEditCopy = new javax.swing.JMenuItem();
        menuEditPaste = new javax.swing.JMenuItem();
        menuEditDelete = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 200));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainToolBar.setFloatable(false);
        mainToolBar.setRollover(true);

        toolBarNewProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/new.png"))); // NOI18N
        toolBarNewProject.setToolTipText("Create a new project.");
        toolBarNewProject.setFocusable(false);
        toolBarNewProject.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarNewProject.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarNewProject.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarNewProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarNewProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarNewProjectMouseExited(evt);
            }
        });
        toolBarNewProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarNewProjectActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarNewProject);

        toolBarOpenProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/open.png"))); // NOI18N
        toolBarOpenProject.setToolTipText("Open an existing project.");
        toolBarOpenProject.setFocusable(false);
        toolBarOpenProject.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarOpenProject.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarOpenProject.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarOpenProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarOpenProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarOpenProjectMouseExited(evt);
            }
        });
        toolBarOpenProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarOpenProjectActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarOpenProject);

        toolBarSaveProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/floppy.png"))); // NOI18N
        toolBarSaveProject.setToolTipText("Save the current project.");
        toolBarSaveProject.setFocusable(false);
        toolBarSaveProject.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarSaveProject.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarSaveProject.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarSaveProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarSaveProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarSaveProjectMouseExited(evt);
            }
        });
        mainToolBar.add(toolBarSaveProject);
        mainToolBar.add(jSeparator1);

        toolBarCut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/cut.png"))); // NOI18N
        toolBarCut.setToolTipText("Cut the selection and put it on the clipboard.");
        toolBarCut.setFocusable(false);
        toolBarCut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarCut.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarCut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarCut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarCutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarCutMouseExited(evt);
            }
        });
        toolBarCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarCutActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarCut);

        toolBarCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/copy.png"))); // NOI18N
        toolBarCopy.setText("");
        toolBarCopy.setToolTipText("Copy the selection and put it on the clipboard.");
        toolBarCopy.setFocusable(false);
        toolBarCopy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarCopy.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarCopy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarCopy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarCopyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarCopyMouseExited(evt);
            }
        });
        toolBarCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarCopyActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarCopy);

        toolBarPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/paste.png"))); // NOI18N
        toolBarPaste.setToolTipText("Insert clipboard contents.");
        toolBarPaste.setFocusable(false);
        toolBarPaste.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarPaste.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarPaste.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarPaste.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarPasteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarPasteMouseExited(evt);
            }
        });
        toolBarPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarPasteActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarPaste);

        toolBarDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/delete.png"))); // NOI18N
        toolBarDelete.setToolTipText("Delete the selection.");
        toolBarDelete.setFocusable(false);
        toolBarDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarDelete.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarDeleteMouseExited(evt);
            }
        });
        toolBarDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarDeleteActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarDelete);
        mainToolBar.add(jSeparator2);

        toolBarUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/undo.png"))); // NOI18N
        toolBarUndo.setToolTipText("Undo the last action.");
        toolBarUndo.setFocusable(false);
        toolBarUndo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarUndo.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarUndo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarUndo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarUndoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarUndoMouseExited(evt);
            }
        });
        toolBarUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarUndoActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarUndo);

        toolBarRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/redo.png"))); // NOI18N
        toolBarRedo.setToolTipText("Redo the last undo action.");
        toolBarRedo.setFocusable(false);
        toolBarRedo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarRedo.setPreferredSize(new java.awt.Dimension(28, 28));
        toolBarRedo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarRedo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toolBarRedoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toolBarRedoMouseExited(evt);
            }
        });
        toolBarRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarRedoActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarRedo);
        mainToolBar.add(jSeparator3);

        getContentPane().add(mainToolBar, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.setPreferredSize(new java.awt.Dimension(35, 24));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        statusBarLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 4, 0, 0));
        jPanel1.add(statusBarLabel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        middlePanel.setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane3.setResizeWeight(1.0);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel3.setMinimumSize(new java.awt.Dimension(300, 300));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));
        jSplitPane2.setRightComponent(jPanel3);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setViewportView(mapTree);

        jPanel2.add(jScrollPane1);

        jSplitPane2.setLeftComponent(jPanel2);

        jSplitPane3.setLeftComponent(jSplitPane2);
        jSplitPane3.setRightComponent(jPanel4);

        jScrollPane2.setViewportView(jTree1);

        jSplitPane3.setRightComponent(jScrollPane2);

        middlePanel.add(jSplitPane3);

        getContentPane().add(middlePanel, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        fileMenuNewProject.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        fileMenuNewProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/new.png"))); // NOI18N
        fileMenuNewProject.setText("New Project...");
        fileMenuNewProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fileMenuNewProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fileMenuNewProjectMouseExited(evt);
            }
        });
        fileMenuNewProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuNewProjectActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuNewProject);

        fileMenuOpenProject.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        fileMenuOpenProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/open.png"))); // NOI18N
        fileMenuOpenProject.setText("Open project...");
        fileMenuOpenProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fileMenuOpenProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fileMenuOpenProjectMouseExited(evt);
            }
        });
        fileMenuOpenProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuOpenProjectActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuOpenProject);

        fileMenuCloseProject.setText("Close project");
        fileMenuCloseProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fileMenuCloseProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fileMenuCloseProjectMouseExited(evt);
            }
        });
        fileMenuCloseProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuCloseProjectActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuCloseProject);

        fileMenuSaveProject.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        fileMenuSaveProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/floppy.png"))); // NOI18N
        fileMenuSaveProject.setText("Save project");
        fileMenuSaveProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fileMenuSaveProjectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fileMenuSaveProjectMouseExited(evt);
            }
        });
        fileMenu.add(fileMenuSaveProject);
        fileMenu.add(jSeparator4);

        fileMenuExit.setText("Exit");
        fileMenuExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fileMenuExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fileMenuExitMouseExited(evt);
            }
        });
        fileMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuExitActionPerformed(evt);
            }
        });
        fileMenu.add(fileMenuExit);

        mainMenuBar.add(fileMenu);

        editMenu.setText("Edit");

        menuEditUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        menuEditUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/undo.png"))); // NOI18N
        menuEditUndo.setText("Undo");
        menuEditUndo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuEditUndoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuEditUndoMouseExited(evt);
            }
        });
        menuEditUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditUndoActionPerformed(evt);
            }
        });
        editMenu.add(menuEditUndo);

        menuEditRedo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        menuEditRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/redo.png"))); // NOI18N
        menuEditRedo.setText("Redo");
        menuEditRedo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuEditRedoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuEditRedoMouseExited(evt);
            }
        });
        menuEditRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditRedoActionPerformed(evt);
            }
        });
        editMenu.add(menuEditRedo);
        editMenu.add(jSeparator5);

        menuEditCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuEditCut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/cut.png"))); // NOI18N
        menuEditCut.setText("Cut");
        menuEditCut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuEditCutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuEditCutMouseExited(evt);
            }
        });
        menuEditCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditCutActionPerformed(evt);
            }
        });
        editMenu.add(menuEditCut);

        menuEditCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuEditCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/copy.png"))); // NOI18N
        menuEditCopy.setText("Copy");
        menuEditCopy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuEditCopyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuEditCopyMouseExited(evt);
            }
        });
        menuEditCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditCopyActionPerformed(evt);
            }
        });
        editMenu.add(menuEditCopy);

        menuEditPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        menuEditPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/paste.png"))); // NOI18N
        menuEditPaste.setText("Paste");
        menuEditPaste.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuEditPasteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuEditPasteMouseExited(evt);
            }
        });
        menuEditPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditPasteActionPerformed(evt);
            }
        });
        editMenu.add(menuEditPaste);

        menuEditDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        menuEditDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/delete.png"))); // NOI18N
        menuEditDelete.setText("Delete");
        menuEditDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuEditDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuEditDeleteMouseExited(evt);
            }
        });
        menuEditDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditDeleteActionPerformed(evt);
            }
        });
        editMenu.add(menuEditDelete);

        mainMenuBar.add(editMenu);

        setJMenuBar(mainMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileMenuNewProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuNewProjectMouseEntered
        statusBarLabel.setText("Create a new project.");
    }//GEN-LAST:event_fileMenuNewProjectMouseEntered

    private void fileMenuNewProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuNewProjectMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_fileMenuNewProjectMouseExited

    private void fileMenuOpenProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuOpenProjectMouseEntered
        statusBarLabel.setText("Open an existing project.");
    }//GEN-LAST:event_fileMenuOpenProjectMouseEntered

    private void fileMenuOpenProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuOpenProjectMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_fileMenuOpenProjectMouseExited

    private void fileMenuSaveProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuSaveProjectMouseEntered
        statusBarLabel.setText("Save the current project.");
    }//GEN-LAST:event_fileMenuSaveProjectMouseEntered

    private void fileMenuSaveProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuSaveProjectMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_fileMenuSaveProjectMouseExited

    private void fileMenuExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuExitMouseEntered
        statusBarLabel.setText("Exit the application.");
    }//GEN-LAST:event_fileMenuExitMouseEntered

    private void fileMenuExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuExitMouseExited
        
    }//GEN-LAST:event_fileMenuExitMouseExited

    private void toolBarNewProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarNewProjectMouseEntered
        statusBarLabel.setText("Create a new project.");
    }//GEN-LAST:event_toolBarNewProjectMouseEntered

    private void toolBarNewProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarNewProjectMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarNewProjectMouseExited

    private void toolBarOpenProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarOpenProjectMouseEntered
        statusBarLabel.setText("Open an existing project.");
    }//GEN-LAST:event_toolBarOpenProjectMouseEntered

    private void toolBarOpenProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarOpenProjectMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarOpenProjectMouseExited

    private void toolBarSaveProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarSaveProjectMouseEntered
        statusBarLabel.setText("Save the current project.");
    }//GEN-LAST:event_toolBarSaveProjectMouseEntered

    private void toolBarSaveProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarSaveProjectMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarSaveProjectMouseExited

    private void fileMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuExitActionPerformed
        statusBarLabel.setText("");
        close();
    }//GEN-LAST:event_fileMenuExitActionPerformed

    private void fileMenuNewProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuNewProjectActionPerformed
        statusBarLabel.setText("");
        ProjectWindow win = new ProjectWindow(this, true);
        win.setVisible(true);
    }//GEN-LAST:event_fileMenuNewProjectActionPerformed

    private void toolBarNewProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarNewProjectActionPerformed
        statusBarLabel.setText("");
        ProjectWindow win = new ProjectWindow(this, true);
        win.setVisible(true);
    }//GEN-LAST:event_toolBarNewProjectActionPerformed

    private void fileMenuOpenProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuOpenProjectActionPerformed
        statusBarLabel.setText("");
        performOpenProject();
    }//GEN-LAST:event_fileMenuOpenProjectActionPerformed

    private void toolBarOpenProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarOpenProjectActionPerformed
        statusBarLabel.setText("");
        performOpenProject();
    }//GEN-LAST:event_toolBarOpenProjectActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       close();
    }//GEN-LAST:event_formWindowClosing

    private void fileMenuCloseProjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuCloseProjectMouseEntered
        statusBarLabel.setText("Close the current project.");
    }//GEN-LAST:event_fileMenuCloseProjectMouseEntered

    private void fileMenuCloseProjectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuCloseProjectMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_fileMenuCloseProjectMouseExited

    private void fileMenuCloseProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuCloseProjectActionPerformed
        statusBarLabel.setText("");
        ProjectMgr.closeProject();
    }//GEN-LAST:event_fileMenuCloseProjectActionPerformed

    private void menuEditCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditCopyActionPerformed
        statusBarLabel.setText("");
        copy();
    }//GEN-LAST:event_menuEditCopyActionPerformed

    private void menuEditUndoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditUndoMouseEntered
        statusBarLabel.setText("Undo the last action.");
    }//GEN-LAST:event_menuEditUndoMouseEntered

    private void menuEditUndoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditUndoMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_menuEditUndoMouseExited

    private void menuEditRedoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditRedoMouseEntered
        statusBarLabel.setText("Redo the last undo action.");
    }//GEN-LAST:event_menuEditRedoMouseEntered

    private void menuEditRedoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditRedoMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_menuEditRedoMouseExited

    private void menuEditCutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditCutMouseEntered
        statusBarLabel.setText("Cut the selection and put it on the clipboard.");
    }//GEN-LAST:event_menuEditCutMouseEntered

    private void menuEditCutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditCutMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_menuEditCutMouseExited

    private void menuEditCopyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditCopyMouseEntered
        statusBarLabel.setText("Copy the selection and put it on the clipboard.");
    }//GEN-LAST:event_menuEditCopyMouseEntered

    private void menuEditCopyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditCopyMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_menuEditCopyMouseExited

    private void menuEditPasteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditPasteMouseEntered
        statusBarLabel.setText("Insert clipboard contents.");
    }//GEN-LAST:event_menuEditPasteMouseEntered

    private void menuEditPasteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditPasteMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_menuEditPasteMouseExited

    private void menuEditDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditDeleteMouseEntered
        statusBarLabel.setText("Delete the selection.");
    }//GEN-LAST:event_menuEditDeleteMouseEntered

    private void menuEditDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuEditDeleteMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_menuEditDeleteMouseExited

    private void toolBarCutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarCutMouseEntered
        statusBarLabel.setText("Cut the selection and put it on the clipboard.");
    }//GEN-LAST:event_toolBarCutMouseEntered

    private void toolBarCutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarCutMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarCutMouseExited

    private void toolBarPasteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarPasteMouseEntered
        statusBarLabel.setText("Insert clipboard contents.");
    }//GEN-LAST:event_toolBarPasteMouseEntered

    private void toolBarPasteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarPasteMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarPasteMouseExited

    private void toolBarDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarDeleteMouseEntered
        statusBarLabel.setText("Delete the selection.");
    }//GEN-LAST:event_toolBarDeleteMouseEntered

    private void toolBarDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarDeleteMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarDeleteMouseExited

    private void toolBarUndoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarUndoMouseEntered
        statusBarLabel.setText("Undo the last action.");
    }//GEN-LAST:event_toolBarUndoMouseEntered

    private void toolBarUndoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarUndoMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarUndoMouseExited

    private void toolBarRedoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarRedoMouseEntered
        statusBarLabel.setText("Redo the last undo action.");
    }//GEN-LAST:event_toolBarRedoMouseEntered

    private void toolBarRedoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarRedoMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarRedoMouseExited

    private void toolBarCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarCutActionPerformed
        cut();
    }//GEN-LAST:event_toolBarCutActionPerformed

    private void menuEditCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditCutActionPerformed
        cut();
    }//GEN-LAST:event_menuEditCutActionPerformed

    private void toolBarPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarPasteActionPerformed
        paste();
    }//GEN-LAST:event_toolBarPasteActionPerformed

    private void menuEditPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditPasteActionPerformed
        paste();
    }//GEN-LAST:event_menuEditPasteActionPerformed

    private void menuEditDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditDeleteActionPerformed
        delete();
    }//GEN-LAST:event_menuEditDeleteActionPerformed

    private void toolBarDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarDeleteActionPerformed
        delete();
    }//GEN-LAST:event_toolBarDeleteActionPerformed

    private void toolBarUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarUndoActionPerformed
        undo();
    }//GEN-LAST:event_toolBarUndoActionPerformed

    private void menuEditUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditUndoActionPerformed
        undo();
    }//GEN-LAST:event_menuEditUndoActionPerformed

    private void menuEditRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditRedoActionPerformed
        redo();
    }//GEN-LAST:event_menuEditRedoActionPerformed

    private void toolBarRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarRedoActionPerformed
        redo();
    }//GEN-LAST:event_toolBarRedoActionPerformed

    private void toolBarCopyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarCopyMouseExited
        statusBarLabel.setText("");
    }//GEN-LAST:event_toolBarCopyMouseExited

    private void toolBarCopyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toolBarCopyMouseEntered
        statusBarLabel.setText("Copy the selection and put it on the clipboard.");
    }//GEN-LAST:event_toolBarCopyMouseEntered

    private void toolBarCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarCopyActionPerformed
        copy();
    }//GEN-LAST:event_toolBarCopyActionPerformed

    private void performOpenProject(){
        String filterText = AppMgr.NAME + " (*." + AppMgr.getExtension("project file") + ")";
        File result = SwingUtil.getFileChoice(this, "", new FileNameExtensionFilter(filterText, AppMgr.getExtension("project file")), "Open project");
        if(result != null){
            String projectPath = result.getParent();
            if(projectPath != null){
                ProjectMgr.openProject(projectPath);
            }
        }
    }
    
    private void close(){
        AppMgr.saveSettings();
        ProjectMgr.closeProject();
        dispose();
    }

    public void undo(){
        System.out.println("undo");
    }
    
    public void redo(){
        System.out.println("redo");
    }
    
    public void cut(){
        System.out.println("cut");
    }
    
    public void copy(){
        System.out.println("copy");
    }
    
    public void paste(){
        System.out.println("paste");
    }
    
    public void delete(){
        System.out.println("delete");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileMenuCloseProject;
    private javax.swing.JMenuItem fileMenuExit;
    private javax.swing.JMenuItem fileMenuNewProject;
    private javax.swing.JMenuItem fileMenuOpenProject;
    private javax.swing.JMenuItem fileMenuSaveProject;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JToolBar mainToolBar;
    private lib.editor.widget.tree.tree.MapTree mapTree;
    private javax.swing.JMenuItem menuEditCopy;
    private javax.swing.JMenuItem menuEditCut;
    private javax.swing.JMenuItem menuEditDelete;
    private javax.swing.JMenuItem menuEditPaste;
    private javax.swing.JMenuItem menuEditRedo;
    private javax.swing.JMenuItem menuEditUndo;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JLabel statusBarLabel;
    private javax.swing.JButton toolBarCopy;
    private javax.swing.JButton toolBarCut;
    private javax.swing.JButton toolBarDelete;
    private javax.swing.JButton toolBarNewProject;
    private javax.swing.JButton toolBarOpenProject;
    private javax.swing.JButton toolBarPaste;
    private javax.swing.JButton toolBarRedo;
    private javax.swing.JButton toolBarSaveProject;
    private javax.swing.JButton toolBarUndo;
    // End of variables declaration//GEN-END:variables
}
