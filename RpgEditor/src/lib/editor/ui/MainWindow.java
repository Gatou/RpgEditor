package lib.editor.ui;

import com.badlogic.gdx.Gdx;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Arrays;
import java.util.List;
import java.util.Properties;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JToolBar;
import javax.swing.KeyStroke;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.filechooser.FileNameExtensionFilter;
import lib.editor.mgr.AppMgr;
import lib.editor.mgr.DataMgr;
import lib.editor.mgr.Mgr;
import lib.editor.mgr.ProjectMgr;
import lib.editor.mgr.WidgetMgr;
import lib.editor.mgr.WindowMgr;
import lib.editor.util.SwingUtil;
import lib.editor.widget.mapeditor.MapEditorGraphicsView;
import org.jdesktop.swingx.MultiSplitLayout.Divider;
import org.jdesktop.swingx.MultiSplitLayout.Leaf;
import org.jdesktop.swingx.MultiSplitLayout.Split;
import org.jdesktop.swingx.multisplitpane.DefaultSplitPaneModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gaetan
 */
public class MainWindow extends javax.swing.JFrame {
    
    MapEditorGraphicsView mapEditor;
    
    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {
        
        
        setLocationRelativeTo( null );
        /*
 List children = 
Arrays.asList(new Leaf("left"),
        new Divider(), 
new Leaf("center"),
new Divider(), 
new Leaf("right"));
Split modelRoot = new Split();
modelRoot.setChildren(children);

jXMultiSplitPane1.getMultiSplitLayout().setModel(modelRoot);
jXMultiSplitPane1.add(jButton1, "left");
jXMultiSplitPane1.add(jButton2, "right");
jXMultiSplitPane1.add(jPanel3, "center");

*/

        
        
        
    }
    
    public void init(){
        initComponents();
        
                mapEditor = new MapEditorGraphicsView();
        jPanel3.add(mapEditor.getCanvas());
        



        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        
        setTitle(AppMgr.getNameVersion());
        //WidgetMgr.MAIN_WINDOW = this;
        
        setProjectStateEnabled(false);
        AppMgr.init();
        
        WidgetMgr.MAP_TREE = mapTree;
        //WidgetMgr.MAP_TREE.setup();
    }
    
    
    public void saveSettings(Properties prop){
        String prefix = "MainWindow_";
        prop.put(prefix + "x", String.valueOf(this.getX()));
        prop.put(prefix + "y", String.valueOf(this.getY()));
        prop.put(prefix + "width", String.valueOf(this.getWidth()));
        prop.put(prefix + "height", String.valueOf(this.getHeight()));
        prop.put(prefix + "maximized", String.valueOf(this.getExtendedState() & JFrame.MAXIMIZED_BOTH));
    }
    
    public void loadSettings(Properties prop){
        String prefix = "MainWindow_";
        setBounds(
                Integer.parseInt(prop.getProperty(prefix + "x")), 
                Integer.parseInt(prop.getProperty(prefix + "y")),
                Integer.parseInt(prop.getProperty(prefix + "width")),
                Integer.parseInt(prop.getProperty(prefix + "height")));
        SwingUtil.adjustComponentBounds(this, null);
        if(Integer.parseInt(prop.getProperty(prefix + "maximized")) != 0){
            setExtendedState(getExtendedState() | JFrame.MAXIMIZED_BOTH);
        }
        
    }
    
    public void setProjectStateEnabled(boolean enabled){
        //Enabled tool bar, except new and open project
        for(int i=2; i<mainToolBar.getComponentCount(); i++){
            if(!(mainToolBar.getComponent(i) instanceof JToolBar.Separator)){
                mainToolBar.getComponent(i).setEnabled(enabled);
            }
        }
        
        //Enabled file menu, except new, open project and exit
        for(int i=2; i<fileMenu.getMenuComponentCount()-1; i++){
            if(!(fileMenu.getMenuComponent(i) instanceof JPopupMenu.Separator)){
                fileMenu.getMenuComponent(i).setEnabled(enabled);
            }
        }
        
        //Enabled all the other menu in the mainMenuBar
        for(int i=1; i<mainMenuBar.getComponentCount(); i++){
            JMenu menu = (JMenu) mainMenuBar.getComponent(i);
            for(Component comp : menu.getMenuComponents()){
                if(!(comp instanceof JPopupMenu.Separator)){
                    comp.setEnabled(enabled);
                }
            }
        }
        
        //Show or not the middle panel (map editor, map tree, etc...)
        middlePanel.setVisible(enabled);
    }

    public JLabel getStatusLabel(){
        return statusBarLabel;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainToolBar = new javax.swing.JToolBar();
        toolBarNew = new lib.editor.widget.button.ToolBarButton();
        toolBarOpen = new lib.editor.widget.button.ToolBarButton();
        toolBarSave = new lib.editor.widget.button.ToolBarButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        toolBarCut = new lib.editor.widget.button.ToolBarButton();
        toolBarCopy = new lib.editor.widget.button.ToolBarButton();
        toolBarPaste = new lib.editor.widget.button.ToolBarButton();
        toolBarDelete = new lib.editor.widget.button.ToolBarButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        toolBarUndo = new lib.editor.widget.button.ToolBarButton();
        toolBarRedo = new lib.editor.widget.button.ToolBarButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jPanel1 = new javax.swing.JPanel();
        statusBarLabel = new javax.swing.JLabel();
        middlePanel = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mapTree = new lib.editor.widget.tree.tree.MapTree();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jXTree1 = new org.jdesktop.swingx.JXTree();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileNew = new lib.editor.widget.menu.MenuItem();
        fileOpen = new lib.editor.widget.menu.MenuItem();
        fileClose = new lib.editor.widget.menu.MenuItem();
        fileSave = new lib.editor.widget.menu.MenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        fileExit = new lib.editor.widget.menu.MenuItem();
        editMenu = new javax.swing.JMenu();
        menuEditUndo = new javax.swing.JMenuItem();
        menuEditRedo = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        menuEditCut = new javax.swing.JMenuItem();
        menuEditCopy = new javax.swing.JMenuItem();
        menuEditPaste = new javax.swing.JMenuItem();
        menuEditDelete = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 200));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainToolBar.setFloatable(false);
        mainToolBar.setRollover(true);

        toolBarNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/new.png"))); // NOI18N
        toolBarNew.setToolTipText("Create a new project.");
        toolBarNew.setFocusable(false);
        toolBarNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarNew.setStatusText("Create a new project.");
        toolBarNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarNewActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarNew);

        toolBarOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/open.png"))); // NOI18N
        toolBarOpen.setToolTipText("Open an existing project.");
        toolBarOpen.setFocusable(false);
        toolBarOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarOpen.setStatusText("Open an existing project.");
        toolBarOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarOpenActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarOpen);

        toolBarSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/floppy.png"))); // NOI18N
        toolBarSave.setToolTipText("Save the current project.");
        toolBarSave.setFocusable(false);
        toolBarSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarSave.setStatusText("Save the current project.");
        toolBarSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarSaveActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarSave);
        mainToolBar.add(jSeparator1);

        toolBarCut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/cut.png"))); // NOI18N
        toolBarCut.setToolTipText("Cut the selection and put it on the clipboard.");
        toolBarCut.setFocusable(false);
        toolBarCut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarCut.setStatusText("Cut the selection and put it on the clipboard.");
        toolBarCut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarCutActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarCut);

        toolBarCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/copy.png"))); // NOI18N
        toolBarCopy.setToolTipText("Copy the selection and put it on the clipboard.");
        toolBarCopy.setFocusable(false);
        toolBarCopy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarCopy.setStatusText("Copy the selection and put it on the clipboard.");
        toolBarCopy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarCopyActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarCopy);

        toolBarPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/paste.png"))); // NOI18N
        toolBarPaste.setToolTipText("Insert clipboard contents.");
        toolBarPaste.setFocusable(false);
        toolBarPaste.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarPaste.setStatusText("Insert clipboard contents.");
        toolBarPaste.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarPasteActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarPaste);

        toolBarDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/delete.png"))); // NOI18N
        toolBarDelete.setToolTipText("Delete the selection.");
        toolBarDelete.setFocusable(false);
        toolBarDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarDelete.setStatusText("Delete the selection.");
        toolBarDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarDeleteActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarDelete);
        mainToolBar.add(jSeparator2);

        toolBarUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/undo.png"))); // NOI18N
        toolBarUndo.setToolTipText("Undo the last action.");
        toolBarUndo.setFocusable(false);
        toolBarUndo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarUndo.setStatusText("Undo the last action.");
        toolBarUndo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarUndoActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarUndo);

        toolBarRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/redo.png"))); // NOI18N
        toolBarRedo.setToolTipText("Redo the last undo action.");
        toolBarRedo.setFocusable(false);
        toolBarRedo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolBarRedo.setStatusText("Redo the last undo action.");
        toolBarRedo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBarRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolBarRedoActionPerformed(evt);
            }
        });
        mainToolBar.add(toolBarRedo);
        mainToolBar.add(jSeparator3);

        getContentPane().add(mainToolBar, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel1.setPreferredSize(new java.awt.Dimension(35, 24));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        statusBarLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 4, 0, 0));
        jPanel1.add(statusBarLabel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        middlePanel.setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane3.setResizeWeight(1.0);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel3.setMinimumSize(new java.awt.Dimension(300, 300));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));
        jSplitPane2.setRightComponent(jPanel3);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setViewportView(mapTree);

        jPanel2.add(jScrollPane1);

        jSplitPane2.setLeftComponent(jPanel2);

        jSplitPane3.setLeftComponent(jSplitPane2);
        jSplitPane3.setRightComponent(jPanel4);

        jScrollPane3.setViewportView(jXTree1);

        jSplitPane3.setRightComponent(jScrollPane3);

        middlePanel.add(jSplitPane3);

        getContentPane().add(middlePanel, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        fileNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        fileNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/new.png"))); // NOI18N
        fileNew.setText("New project...");
        fileNew.setStatusText("Create a new project.");
        fileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNewActionPerformed(evt);
            }
        });
        fileMenu.add(fileNew);

        fileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        fileOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/open.png"))); // NOI18N
        fileOpen.setText("Open project...");
        fileOpen.setPreferredSize(null);
        fileOpen.setStatusText("Open an existing project.");
        fileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileOpenActionPerformed(evt);
            }
        });
        fileMenu.add(fileOpen);

        fileClose.setText("Close project");
        fileClose.setStatusText("Close the current project.");
        fileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCloseActionPerformed(evt);
            }
        });
        fileMenu.add(fileClose);

        fileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        fileSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/floppy.png"))); // NOI18N
        fileSave.setText("Save project");
        fileSave.setStatusText("Save the current project.");
        fileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSaveActionPerformed(evt);
            }
        });
        fileMenu.add(fileSave);
        fileMenu.add(jSeparator4);

        fileExit.setText("Exit");
        fileExit.setStatusText("Exit the application.");
        fileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileExitActionPerformed(evt);
            }
        });
        fileMenu.add(fileExit);

        mainMenuBar.add(fileMenu);

        editMenu.setText("Edit");

        menuEditUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        menuEditUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/undo.png"))); // NOI18N
        menuEditUndo.setText("Undo");
        menuEditUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditUndoActionPerformed(evt);
            }
        });
        editMenu.add(menuEditUndo);

        menuEditRedo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        menuEditRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/redo.png"))); // NOI18N
        menuEditRedo.setText("Redo");
        menuEditRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditRedoActionPerformed(evt);
            }
        });
        editMenu.add(menuEditRedo);
        editMenu.add(jSeparator5);

        menuEditCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuEditCut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/cut.png"))); // NOI18N
        menuEditCut.setText("Cut");
        menuEditCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditCutActionPerformed(evt);
            }
        });
        editMenu.add(menuEditCut);

        menuEditCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuEditCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/copy.png"))); // NOI18N
        menuEditCopy.setText("Copy");
        menuEditCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditCopyActionPerformed(evt);
            }
        });
        editMenu.add(menuEditCopy);

        menuEditPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        menuEditPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/paste.png"))); // NOI18N
        menuEditPaste.setText("Paste");
        menuEditPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditPasteActionPerformed(evt);
            }
        });
        editMenu.add(menuEditPaste);

        menuEditDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        menuEditDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/delete.png"))); // NOI18N
        menuEditDelete.setText("Delete");
        menuEditDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditDeleteActionPerformed(evt);
            }
        });
        editMenu.add(menuEditDelete);

        mainMenuBar.add(editMenu);

        setJMenuBar(mainMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       exit();
    }//GEN-LAST:event_formWindowClosing

    private void menuEditCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditCopyActionPerformed
        statusBarLabel.setText("");
        copy();
    }//GEN-LAST:event_menuEditCopyActionPerformed

    private void menuEditCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditCutActionPerformed
        cut();
    }//GEN-LAST:event_menuEditCutActionPerformed

    private void menuEditPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditPasteActionPerformed
        paste();
    }//GEN-LAST:event_menuEditPasteActionPerformed

    private void menuEditDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditDeleteActionPerformed
        delete();
    }//GEN-LAST:event_menuEditDeleteActionPerformed

    private void menuEditUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditUndoActionPerformed
        undo();
    }//GEN-LAST:event_menuEditUndoActionPerformed

    private void menuEditRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditRedoActionPerformed
        redo();
    }//GEN-LAST:event_menuEditRedoActionPerformed

    private void toolBarNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarNewActionPerformed
        statusBarLabel.setText("");
        new ProjectWindow(this, true).setVisible(true);
    }//GEN-LAST:event_toolBarNewActionPerformed

    private void toolBarOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarOpenActionPerformed
        statusBarLabel.setText("");
        openProject();
    }//GEN-LAST:event_toolBarOpenActionPerformed

    private void toolBarSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarSaveActionPerformed
        save();
    }//GEN-LAST:event_toolBarSaveActionPerformed

    private void toolBarCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarCutActionPerformed
        cut();
    }//GEN-LAST:event_toolBarCutActionPerformed

    private void toolBarCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarCopyActionPerformed
        copy();
    }//GEN-LAST:event_toolBarCopyActionPerformed

    private void toolBarPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarPasteActionPerformed
        paste();
    }//GEN-LAST:event_toolBarPasteActionPerformed

    private void toolBarDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarDeleteActionPerformed
        delete();
    }//GEN-LAST:event_toolBarDeleteActionPerformed

    private void toolBarUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarUndoActionPerformed
        undo();
    }//GEN-LAST:event_toolBarUndoActionPerformed

    private void toolBarRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolBarRedoActionPerformed
        redo();
    }//GEN-LAST:event_toolBarRedoActionPerformed

    private void fileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNewActionPerformed
        statusBarLabel.setText("");
        new ProjectWindow(this, true).setVisible(true);
    }//GEN-LAST:event_fileNewActionPerformed

    private void fileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileOpenActionPerformed
        statusBarLabel.setText("");
        openProject();
    }//GEN-LAST:event_fileOpenActionPerformed

    private void fileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCloseActionPerformed
        statusBarLabel.setText("");
        ProjectMgr.closeProject();
    }//GEN-LAST:event_fileCloseActionPerformed

    private void fileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSaveActionPerformed
        statusBarLabel.setText("");
        save();
    }//GEN-LAST:event_fileSaveActionPerformed

    private void fileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileExitActionPerformed
        statusBarLabel.setText("");
        exit();
    }//GEN-LAST:event_fileExitActionPerformed

    private void openProject(){
        String filterText = AppMgr.NAME + " (*." + AppMgr.getExtension("project file") + ")";
        File result = SwingUtil.getFileChoice(this, "", new FileNameExtensionFilter(filterText, AppMgr.getExtension("project file")), "Open project");
        if(result != null){
            String projectPath = result.getParent();
            if(projectPath != null){
                ProjectMgr.openProject(projectPath);
            }
        }
    }
    
    private void exit(){
        AppMgr.saveSettings();
        ProjectMgr.closeProject();
        dispose();
    }

    public void save(){
        
    }
    
    public void undo(){
        System.out.println("undo");
    }
    
    public void redo(){
        System.out.println("redo");
    }
    
    public void cut(){
        System.out.println("cut");
    }
    
    public void copy(){
        System.out.println("copy");
    }
    
    public void paste(){
        System.out.println("paste");
    }
    
    public void delete(){
        System.out.println("delete");
    }
    
    public void refresh(){
        mapTree.setDatabase(DataMgr.dataGame.get("MapInfos"), DataMgr.dataEditor.get("MapInfos"));
        mapTree.refresh();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu editMenu;
    private lib.editor.widget.menu.MenuItem fileClose;
    private lib.editor.widget.menu.MenuItem fileExit;
    private javax.swing.JMenu fileMenu;
    private lib.editor.widget.menu.MenuItem fileNew;
    private lib.editor.widget.menu.MenuItem fileOpen;
    private lib.editor.widget.menu.MenuItem fileSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private org.jdesktop.swingx.JXTree jXTree1;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JToolBar mainToolBar;
    private lib.editor.widget.tree.tree.MapTree mapTree;
    private javax.swing.JMenuItem menuEditCopy;
    private javax.swing.JMenuItem menuEditCut;
    private javax.swing.JMenuItem menuEditDelete;
    private javax.swing.JMenuItem menuEditPaste;
    private javax.swing.JMenuItem menuEditRedo;
    private javax.swing.JMenuItem menuEditUndo;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JLabel statusBarLabel;
    private lib.editor.widget.button.ToolBarButton toolBarCopy;
    private lib.editor.widget.button.ToolBarButton toolBarCut;
    private lib.editor.widget.button.ToolBarButton toolBarDelete;
    private lib.editor.widget.button.ToolBarButton toolBarNew;
    private lib.editor.widget.button.ToolBarButton toolBarOpen;
    private lib.editor.widget.button.ToolBarButton toolBarPaste;
    private lib.editor.widget.button.ToolBarButton toolBarRedo;
    private lib.editor.widget.button.ToolBarButton toolBarSave;
    private lib.editor.widget.button.ToolBarButton toolBarUndo;
    // End of variables declaration//GEN-END:variables

}
